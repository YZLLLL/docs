/**
 * JavaScript中的位运算符用于对数字的二进制表示进行操作。以下是JavaScript中常用的位运算符： 
 
1. 位与（AND）：& 
   - 用法： a & b  
   - 描述：对两个操作数的每个对应位执行逻辑与操作。如果两个位都是1，则结果为1；否则为0。 
 
2. 位或（OR）：| 
   - 用法： a | b  
   - 描述：对两个操作数的每个对应位执行逻辑或操作。如果两个位中至少有一个位是1，则结果为1；否则为0。 
 
3. 位异或（XOR）：^ 
   - 用法： a ^ b  
   - 描述：对两个操作数的每个对应位执行逻辑异或操作。如果两个位不相同，则结果为1；否则为0。 
 
4. 位非（NOT）：~ 
   - 用法： ~a  
   - 描述：对操作数的每个位执行逻辑非操作。将每个位的值取反，0变为1，1变为0。 
 
5. 左移（Left Shift）：<< 
   - 用法： a << b  
   - 描述：将操作数的二进制表示向左移动指定的位数。左移时，右侧空出的位用0填充。 
 
6. 右移（Right Shift）：>> 
   - 用法： a >> b  
   - 描述：将操作数的二进制表示向右移动指定的位数。右移时，左侧空出的位用符号位填充（对于正数用0，负数用1）。 
 
7. 无符号右移（Unsigned Right Shift）：>>> 
   - 用法： a >>> b  
   - 描述：将操作数的二进制表示向右移动指定的位数，但无论正负数，左侧空出的位都用0填充。 
 */
// 应用
// 权限
const READ = 0b0001;
const ADD = 0b0010;
const EDIT = 0b0100;
const DELETE = 0b1000;

function canRead(n) {
  return (READ & n) === READ;
}

console.log(canRead(0b1111));
